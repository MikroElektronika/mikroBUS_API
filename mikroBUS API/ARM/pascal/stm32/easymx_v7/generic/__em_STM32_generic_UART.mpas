unit __em_STM32_generic_UART;
uses __t_STM32;

{$IFDEF ENABLE_UART}
function _uartInit_1(cfg: ^const uint32_t) : T_mikrobus_ret;
function _uartInit_2(cfg: ^const uint32_t) : T_mikrobus_ret;
{$ENDIF}

implementation

const _MIKROBUS_ERR_UART : byte = 5;

// ----------------------------------------------------------- SYSTEM SPECIFIC /

{$IFDEF ENABLE_UART}

function _uartInit_1(cfg: ^const uint32_t) : T_mikrobus_ret;
var arg1, arg2, arg3, arg4 : ^const uint32_t;
begin
    arg1 := (cfg + 0);
    arg2 := (cfg + 1);
    arg3 := (cfg + 2);
    arg4 := (cfg + 3);
    Result := 0;
    UART3_Init_Advanced( dword(arg1^), word(arg2^), word(arg3^), word(arg4^), @_GPIO_MODULE_USART3_PD89 );
end;

function _uartInit_2(cfg: ^const uint32_t) : T_mikrobus_ret;
var arg1, arg2, arg3, arg4 : ^const uint32_t;
begin
    arg1 := (cfg + 0);
    arg2 := (cfg + 1);
    arg3 := (cfg + 2);
    arg4 := (cfg + 3);
    Result := 0;
    UART2_Init_Advanced( dword(arg1^), word(arg2^), word(arg3^), word(arg4^), @_GPIO_MODULE_USART2_PD56 );
end;

{$ENDIF}

end.