module __c_PIC32_GPIO
include __t_PIC32 

sub function _getAN_1  () as uint8_t
sub function _getRST_1 () as uint8_t
sub function _getCS_1  () as uint8_t
sub function _getSCK_1 () as uint8_t
sub function _getMISO_1() as uint8_t
sub function _getMOSI_1() as uint8_t
sub function _getPWM_1 () as uint8_t
sub function _getINT_1 () as uint8_t
sub function _getRX_1  () as uint8_t
sub function _getTX_1  () as uint8_t
sub function _getSCL_1 () as uint8_t
sub function _getSDA_1 () as uint8_t
sub procedure _setAN_1  (dim state as uint8_t)
sub procedure _setRST_1 (dim state as uint8_t)
sub procedure _setCS_1  (dim state as uint8_t)
sub procedure _setSCK_1 (dim state as uint8_t)
sub procedure _setMISO_1(dim state as uint8_t)
sub procedure _setMOSI_1(dim state as uint8_t)
sub procedure _setPWM_1 (dim state as uint8_t)
sub procedure _setINT_1 (dim state as uint8_t)
sub procedure _setRX_1  (dim state as uint8_t)
sub procedure _setTX_1  (dim state as uint8_t)
sub procedure _setSCL_1 (dim state as uint8_t)
sub procedure _setSDA_1 (dim state as uint8_t)


sub function _gpioInit_1(dim pin as T_mikrobus_pin, dim direction as T_gpio_dir) as T_mikrobus_ret


implements

const _MIKROBUS_ERR_PIN          as byte = 2

const _GPIO_INPUT                as byte = 1
const _GPIO_OUTPUT               as byte = 0

const _MIKROBUS_AN_PIN           as byte = 0
const _MIKROBUS_RST_PIN          as byte = 1
const _MIKROBUS_CS_PIN           as byte = 2
const _MIKROBUS_SCK_PIN          as byte = 3
const _MIKROBUS_MISO_PIN         as byte = 4
const _MIKROBUS_MOSI_PIN         as byte = 5
const _MIKROBUS_PWM_PIN          as byte = 6
const _MIKROBUS_INT_PIN          as byte = 7
const _MIKROBUS_RX_PIN           as byte = 8
const _MIKROBUS_TX_PIN           as byte = 9
const _MIKROBUS_SCL_PIN          as byte = 10
const _MIKROBUS_SDA_PIN          as byte = 11


sub function _getAN_1  () as uint8_t Result = RB3_bit  end sub
sub function _getRST_1 () as uint8_t Result = RD7_bit  end sub
sub function _getCS_1  () as uint8_t Result = RG9_bit  end sub
sub function _getSCK_1 () as uint8_t Result = RG6_bit  end sub
sub function _getMISO_1() as uint8_t Result = RG7_bit  end sub
sub function _getMOSI_1() as uint8_t Result = RG8_bit  end sub
sub function _getPWM_1 () as uint8_t Result = RD0_bit  end sub
sub function _getINT_1 () as uint8_t Result = RD11_bit end sub
sub function _getRX_1  () as uint8_t Result = RB8_bit  end sub
sub function _getTX_1  () as uint8_t Result = RB14_bit end sub
sub function _getSCL_1 () as uint8_t Result = RF5_bit  end sub
sub function _getSDA_1 () as uint8_t Result = RF4_bit  end sub
sub procedure _setAN_1  (dim state as uint8_t) LATB3_bit  = state end sub
sub procedure _setRST_1 (dim state as uint8_t) LATD7_bit  = state end sub
sub procedure _setCS_1  (dim state as uint8_t) LATG9_bit  = state end sub
sub procedure _setSCK_1 (dim state as uint8_t) LATG6_bit  = state end sub
sub procedure _setMISO_1(dim state as uint8_t) LATG7_bit  = state end sub
sub procedure _setMOSI_1(dim state as uint8_t) LATG8_bit  = state end sub
sub procedure _setPWM_1 (dim state as uint8_t) LATD0_bit  = state end sub
sub procedure _setINT_1 (dim state as uint8_t) LATD11_bit = state end sub
sub procedure _setRX_1  (dim state as uint8_t) LATB8_bit  = state end sub
sub procedure _setTX_1  (dim state as uint8_t) LATB14_bit = state end sub
sub procedure _setSCL_1 (dim state as uint8_t) LATF5_bit  = state end sub
sub procedure _setSDA_1 (dim state as uint8_t) LATF4_bit  = state end sub


sub function _gpioInit_1(dim pin as T_mikrobus_pin, dim direction as T_gpio_dir) as T_mikrobus_ret

Result = 0
    select case pin
                case _MIKROBUS_AN_PIN    TRISB3_bit  = direction
                case _MIKROBUS_RST_PIN   TRISD7_bit  = direction
                case _MIKROBUS_CS_PIN    TRISG9_bit  = direction
                case _MIKROBUS_SCK_PIN   TRISG6_bit  = direction
                case _MIKROBUS_MISO_PIN  TRISG7_bit  = direction
                case _MIKROBUS_MOSI_PIN  TRISG8_bit  = direction
                case _MIKROBUS_PWM_PIN   TRISD0_bit  = direction
                case _MIKROBUS_INT_PIN   TRISD11_bit = direction
                case _MIKROBUS_RX_PIN    TRISB8_bit  = direction
                case _MIKROBUS_TX_PIN    TRISB14_bit = direction
                case _MIKROBUS_SCL_PIN   TRISF5_bit  = direction
                case _MIKROBUS_SDA_PIN   TRISF4_bit  = direction
        case else Result = _MIKROBUS_ERR_PIN
    end select
end sub


end.