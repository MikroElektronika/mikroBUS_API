module __ea_generic_GPIO
include __t_AVR 

sub function _getAN_1  () as uint8_t
sub function _getRST_1 () as uint8_t
sub function _getCS_1  () as uint8_t
sub function _getSCK_1 () as uint8_t
sub function _getMISO_1() as uint8_t
sub function _getMOSI_1() as uint8_t
sub function _getPWM_1 () as uint8_t
sub function _getINT_1 () as uint8_t
sub function _getRX_1  () as uint8_t
sub function _getTX_1  () as uint8_t
sub function _getSCL_1 () as uint8_t
sub function _getSDA_1 () as uint8_t
sub procedure _setAN_1  (dim state as uint8_t)
sub procedure _setRST_1 (dim state as uint8_t)
sub procedure _setCS_1  (dim state as uint8_t)
sub procedure _setSCK_1 (dim state as uint8_t)
sub procedure _setMISO_1(dim state as uint8_t)
sub procedure _setMOSI_1(dim state as uint8_t)
sub procedure _setPWM_1 (dim state as uint8_t)
sub procedure _setINT_1 (dim state as uint8_t)
sub procedure _setRX_1  (dim state as uint8_t)
sub procedure _setTX_1  (dim state as uint8_t)
sub procedure _setSCL_1 (dim state as uint8_t)
sub procedure _setSDA_1 (dim state as uint8_t)

sub function _getAN_2  () as uint8_t
sub function _getRST_2 () as uint8_t
sub function _getCS_2  () as uint8_t
sub function _getSCK_2 () as uint8_t
sub function _getMISO_2() as uint8_t
sub function _getMOSI_2() as uint8_t
sub function _getPWM_2 () as uint8_t
sub function _getINT_2 () as uint8_t
sub function _getRX_2  () as uint8_t
sub function _getTX_2  () as uint8_t
sub function _getSCL_2 () as uint8_t
sub function _getSDA_2 () as uint8_t
sub procedure _setAN_2  (dim state as uint8_t)
sub procedure _setRST_2 (dim state as uint8_t)
sub procedure _setCS_2  (dim state as uint8_t)
sub procedure _setSCK_2 (dim state as uint8_t)
sub procedure _setMISO_2(dim state as uint8_t)
sub procedure _setMOSI_2(dim state as uint8_t)
sub procedure _setPWM_2 (dim state as uint8_t)
sub procedure _setINT_2 (dim state as uint8_t)
sub procedure _setRX_2  (dim state as uint8_t)
sub procedure _setTX_2  (dim state as uint8_t)
sub procedure _setSCL_2 (dim state as uint8_t)
sub procedure _setSDA_2 (dim state as uint8_t)

sub function _getAN_3  () as uint8_t
sub function _getRST_3 () as uint8_t
sub function _getCS_3  () as uint8_t
sub function _getSCK_3 () as uint8_t
sub function _getMISO_3() as uint8_t
sub function _getMOSI_3() as uint8_t
sub function _getPWM_3 () as uint8_t
sub function _getINT_3 () as uint8_t
sub function _getRX_3  () as uint8_t
sub function _getTX_3  () as uint8_t
sub function _getSCL_3 () as uint8_t
sub function _getSDA_3 () as uint8_t
sub procedure _setAN_3  (dim state as uint8_t)
sub procedure _setRST_3 (dim state as uint8_t)
sub procedure _setCS_3  (dim state as uint8_t)
sub procedure _setSCK_3 (dim state as uint8_t)
sub procedure _setMISO_3(dim state as uint8_t)
sub procedure _setMOSI_3(dim state as uint8_t)
sub procedure _setPWM_3 (dim state as uint8_t)
sub procedure _setINT_3 (dim state as uint8_t)
sub procedure _setRX_3  (dim state as uint8_t)
sub procedure _setTX_3  (dim state as uint8_t)
sub procedure _setSCL_3 (dim state as uint8_t)
sub procedure _setSDA_3 (dim state as uint8_t)

sub function _gpioInit_1(dim pin as T_mikrobus_pin, dim direction as T_gpio_dir) as T_mikrobus_ret
sub function _gpioInit_2(dim pin as T_mikrobus_pin, dim direction as T_gpio_dir) as T_mikrobus_ret
sub function _gpioInit_3(dim pin as T_mikrobus_pin, dim direction as T_gpio_dir) as T_mikrobus_ret

implements

const _MIKROBUS_ERR_PIN          as byte = 2

const _GPIO_INPUT                as byte = 0
const _GPIO_OUTPUT               as byte = 1

const _MIKROBUS_AN_PIN           as byte = 0
const _MIKROBUS_RST_PIN          as byte = 1
const _MIKROBUS_CS_PIN           as byte = 2
const _MIKROBUS_SCK_PIN          as byte = 3
const _MIKROBUS_MISO_PIN         as byte = 4
const _MIKROBUS_MOSI_PIN         as byte = 5
const _MIKROBUS_PWM_PIN          as byte = 6
const _MIKROBUS_INT_PIN          as byte = 7
const _MIKROBUS_RX_PIN           as byte = 8
const _MIKROBUS_TX_PIN           as byte = 9
const _MIKROBUS_SCL_PIN          as byte = 10
const _MIKROBUS_SDA_PIN          as byte = 11

sub function _getAN_1  () as uint8_t Result = PINA7_bit end sub
sub function _getRST_1 () as uint8_t Result = PINA6_bit end sub
sub function _getCS_1  () as uint8_t Result = PINA5_bit end sub
sub function _getSCK_1 () as uint8_t Result = PINB7_bit end sub
sub function _getMISO_1() as uint8_t Result = PINB6_bit end sub
sub function _getMOSI_1() as uint8_t Result = PINB5_bit end sub
sub function _getPWM_1 () as uint8_t Result = PIND4_bit end sub
sub function _getINT_1 () as uint8_t Result = PIND2_bit end sub
sub function _getRX_1  () as uint8_t Result = PIND0_bit end sub
sub function _getTX_1  () as uint8_t Result = PIND1_bit end sub
sub function _getSCL_1 () as uint8_t Result = PINC0_bit end sub
sub function _getSDA_1 () as uint8_t Result = PINC1_bit end sub
sub procedure _setAN_1  (dim state as uint8_t) PORTA7_bit = state end sub
sub procedure _setRST_1 (dim state as uint8_t) PORTA6_bit = state end sub
sub procedure _setCS_1  (dim state as uint8_t) PORTA5_bit = state end sub
sub procedure _setSCK_1 (dim state as uint8_t) PORTB7_bit = state end sub
sub procedure _setMISO_1(dim state as uint8_t) PORTB6_bit = state end sub
sub procedure _setMOSI_1(dim state as uint8_t) PORTB5_bit = state end sub
sub procedure _setPWM_1 (dim state as uint8_t) PORTD4_bit = state end sub
sub procedure _setINT_1 (dim state as uint8_t) PORTD2_bit = state end sub
sub procedure _setRX_1  (dim state as uint8_t) PORTD0_bit = state end sub
sub procedure _setTX_1  (dim state as uint8_t) PORTD1_bit = state end sub
sub procedure _setSCL_1 (dim state as uint8_t) PORTC0_bit = state end sub
sub procedure _setSDA_1 (dim state as uint8_t) PORTC1_bit = state end sub

sub function _getAN_2  () as uint8_t Result = PINA0_bit end sub
sub function _getRST_2 () as uint8_t Result = PINA1_bit end sub
sub function _getCS_2  () as uint8_t Result = PINA3_bit end sub
sub function _getSCK_2 () as uint8_t Result = PINB7_bit end sub
sub function _getMISO_2() as uint8_t Result = PINB6_bit end sub
sub function _getMOSI_2() as uint8_t Result = PINB5_bit end sub
sub function _getPWM_2 () as uint8_t Result = PIND5_bit end sub
sub function _getINT_2 () as uint8_t Result = PIND3_bit end sub
sub function _getRX_2  () as uint8_t Result = PIND0_bit end sub
sub function _getTX_2  () as uint8_t Result = PIND1_bit end sub
sub function _getSCL_2 () as uint8_t Result = PINC0_bit end sub
sub function _getSDA_2 () as uint8_t Result = PINC1_bit end sub
sub procedure _setAN_2  (dim state as uint8_t) PORTA0_bit = state end sub
sub procedure _setRST_2 (dim state as uint8_t) PORTA1_bit = state end sub
sub procedure _setCS_2  (dim state as uint8_t) PORTA3_bit = state end sub
sub procedure _setSCK_2 (dim state as uint8_t) PORTB7_bit = state end sub
sub procedure _setMISO_2(dim state as uint8_t) PORTB6_bit = state end sub
sub procedure _setMOSI_2(dim state as uint8_t) PORTB5_bit = state end sub
sub procedure _setPWM_2 (dim state as uint8_t) PORTD5_bit = state end sub
sub procedure _setINT_2 (dim state as uint8_t) PORTD3_bit = state end sub
sub procedure _setRX_2  (dim state as uint8_t) PORTD0_bit = state end sub
sub procedure _setTX_2  (dim state as uint8_t) PORTD1_bit = state end sub
sub procedure _setSCL_2 (dim state as uint8_t) PORTC0_bit = state end sub
sub procedure _setSDA_2 (dim state as uint8_t) PORTC1_bit = state end sub

sub function _getAN_3  () as uint8_t Result = PINA4_bit end sub
sub function _getRST_3 () as uint8_t Result = PINB0_bit end sub
sub function _getCS_3  () as uint8_t Result = PINB4_bit end sub
sub function _getSCK_3 () as uint8_t Result = PINB7_bit end sub
sub function _getMISO_3() as uint8_t Result = PINB6_bit end sub
sub function _getMOSI_3() as uint8_t Result = PINB5_bit end sub
sub function _getPWM_3 () as uint8_t Result = PINB3_bit end sub
sub function _getINT_3 () as uint8_t Result = PINB2_bit end sub
sub function _getRX_3  () as uint8_t Result = PIND2_bit end sub
sub function _getTX_3  () as uint8_t Result = PIND3_bit end sub
sub function _getSCL_3 () as uint8_t Result = PINC0_bit end sub
sub function _getSDA_3 () as uint8_t Result = PINC1_bit end sub
sub procedure _setAN_3  (dim state as uint8_t) PORTA4_bit = state end sub
sub procedure _setRST_3 (dim state as uint8_t) PORTB0_bit = state end sub
sub procedure _setCS_3  (dim state as uint8_t) PORTB4_bit = state end sub
sub procedure _setSCK_3 (dim state as uint8_t) PORTB7_bit = state end sub
sub procedure _setMISO_3(dim state as uint8_t) PORTB6_bit = state end sub
sub procedure _setMOSI_3(dim state as uint8_t) PORTB5_bit = state end sub
sub procedure _setPWM_3 (dim state as uint8_t) PORTB3_bit = state end sub
sub procedure _setINT_3 (dim state as uint8_t) PORTB2_bit = state end sub
sub procedure _setRX_3  (dim state as uint8_t) PORTD2_bit = state end sub
sub procedure _setTX_3  (dim state as uint8_t) PORTD3_bit = state end sub
sub procedure _setSCL_3 (dim state as uint8_t) PORTC0_bit = state end sub
sub procedure _setSDA_3 (dim state as uint8_t) PORTC1_bit = state end sub


sub function _gpioInit_1(dim pin as T_mikrobus_pin, dim direction as T_gpio_dir) as T_mikrobus_ret

Result = 0
    select case pin
            case _MIKROBUS_AN_PIN    DDA7_bit  = direction
            case _MIKROBUS_RST_PIN   DDA6_bit  = direction
            case _MIKROBUS_CS_PIN    DDA5_bit  = direction
            case _MIKROBUS_SCK_PIN   DDB7_bit  = direction
            case _MIKROBUS_MISO_PIN  DDB6_bit  = direction
            case _MIKROBUS_MOSI_PIN  DDB5_bit  = direction
            case _MIKROBUS_PWM_PIN   DDD4_bit  = direction
            case _MIKROBUS_INT_PIN   DDD2_bit  = direction
            case _MIKROBUS_RX_PIN    DDD0_bit  = direction
            case _MIKROBUS_TX_PIN    DDD1_bit  = direction
            case _MIKROBUS_SCL_PIN   DDC0_bit  = direction
            case _MIKROBUS_SDA_PIN   DDC1_bit  = direction
        case else Result = _MIKROBUS_ERR_PIN
    end select
end sub

sub function _gpioInit_2(dim pin as T_mikrobus_pin, dim direction as T_gpio_dir) as T_mikrobus_ret

Result = 0
    select case pin
            case _MIKROBUS_AN_PIN    DDA0_bit  = direction
            case _MIKROBUS_RST_PIN   DDA1_bit  = direction
            case _MIKROBUS_CS_PIN    DDA3_bit  = direction
            case _MIKROBUS_SCK_PIN   DDB7_bit  = direction
            case _MIKROBUS_MISO_PIN  DDB6_bit  = direction
            case _MIKROBUS_MOSI_PIN  DDB5_bit  = direction
            case _MIKROBUS_PWM_PIN   DDD5_bit  = direction
            case _MIKROBUS_INT_PIN   DDD3_bit  = direction
            case _MIKROBUS_RX_PIN    DDD0_bit  = direction
            case _MIKROBUS_TX_PIN    DDD1_bit  = direction
            case _MIKROBUS_SCL_PIN   DDC0_bit  = direction
            case _MIKROBUS_SDA_PIN   DDC1_bit  = direction
        case else Result = _MIKROBUS_ERR_PIN
    end select
end sub

sub function _gpioInit_3(dim pin as T_mikrobus_pin, dim direction as T_gpio_dir) as T_mikrobus_ret

Result = 0
    select case pin
            case _MIKROBUS_AN_PIN    DDA4_bit  = direction
            case _MIKROBUS_RST_PIN   DDB0_bit  = direction
            case _MIKROBUS_CS_PIN    DDB4_bit  = direction
            case _MIKROBUS_SCK_PIN   DDB7_bit  = direction
            case _MIKROBUS_MISO_PIN  DDB6_bit  = direction
            case _MIKROBUS_MOSI_PIN  DDB5_bit  = direction
            case _MIKROBUS_PWM_PIN   DDB3_bit  = direction
            case _MIKROBUS_INT_PIN   DDB2_bit  = direction
            case _MIKROBUS_RX_PIN    DDD2_bit  = direction
            case _MIKROBUS_TX_PIN    DDD3_bit  = direction
            case _MIKROBUS_SCL_PIN   DDC0_bit  = direction
            case _MIKROBUS_SDA_PIN   DDC1_bit  = direction
        case else Result = _MIKROBUS_ERR_PIN
    end select
end sub

end.