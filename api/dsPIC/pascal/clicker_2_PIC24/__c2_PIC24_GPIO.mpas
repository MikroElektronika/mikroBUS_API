unit __c2_PIC24_GPIO;
uses __t_DSPIC;

function  _getAN_1  () : uint8_t;
function  _getRST_1 () : uint8_t;
function  _getCS_1  () : uint8_t;
function  _getSCK_1 () : uint8_t;
function  _getMISO_1() : uint8_t;
function  _getMOSI_1() : uint8_t;
function  _getPWM_1 () : uint8_t;
function  _getINT_1 () : uint8_t;
function  _getRX_1  () : uint8_t;
function  _getTX_1  () : uint8_t;
function  _getSCL_1 () : uint8_t;
function  _getSDA_1 () : uint8_t;
procedure _setAN_1  (state: uint8_t);
procedure _setRST_1 (state: uint8_t);
procedure _setCS_1  (state: uint8_t);
procedure _setSCK_1 (state: uint8_t);
procedure _setMISO_1(state: uint8_t);
procedure _setMOSI_1(state: uint8_t);
procedure _setPWM_1 (state: uint8_t);
procedure _setINT_1 (state: uint8_t);
procedure _setRX_1  (state: uint8_t);
procedure _setTX_1  (state: uint8_t);
procedure _setSCL_1 (state: uint8_t);
procedure _setSDA_1 (state: uint8_t);

function  _getAN_2  () : uint8_t;    
function  _getRST_2 () : uint8_t;    
function  _getCS_2  () : uint8_t;    
function  _getSCK_2 () : uint8_t;    
function  _getMISO_2() : uint8_t;    
function  _getMOSI_2() : uint8_t;    
function  _getPWM_2 () : uint8_t;    
function  _getINT_2 () : uint8_t;    
function  _getRX_2  () : uint8_t;    
function  _getTX_2  () : uint8_t;    
function  _getSCL_2 () : uint8_t;    
function  _getSDA_2 () : uint8_t;    
procedure _setAN_2  (state: uint8_t);
procedure _setRST_2 (state: uint8_t);
procedure _setCS_2  (state: uint8_t);
procedure _setSCK_2 (state: uint8_t);
procedure _setMISO_2(state: uint8_t);
procedure _setMOSI_2(state: uint8_t);
procedure _setPWM_2 (state: uint8_t);
procedure _setINT_2 (state: uint8_t);
procedure _setRX_2  (state: uint8_t);
procedure _setTX_2  (state: uint8_t);
procedure _setSCL_2 (state: uint8_t);
procedure _setSDA_2 (state: uint8_t);

function _gpioInit_1(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;
function _gpioInit_2(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;

implementation

const _MIKROBUS_ERR_PIN  : byte = 1;                

const _GPIO_INPUT        : byte = 1;
const _GPIO_OUTPUT       : byte = 0;

const _MIKROBUS_AN_PIN   : byte = 0;
const _MIKROBUS_RST_PIN  : byte = 1;
const _MIKROBUS_CS_PIN   : byte = 2;
const _MIKROBUS_SCK_PIN  : byte = 3;
const _MIKROBUS_MISO_PIN : byte = 4;
const _MIKROBUS_MOSI_PIN : byte = 5;
const _MIKROBUS_PWM_PIN  : byte = 6;
const _MIKROBUS_INT_PIN  : byte = 7;
const _MIKROBUS_RX_PIN   : byte = 8;
const _MIKROBUS_TX_PIN   : byte = 9;
const _MIKROBUS_SCL_PIN  : byte = 10;
const _MIKROBUS_SDA_PIN  : byte = 11;

// ----------------------------------------------------------- SYSTEM SPECIFIC /

function  _getAN_1  () : uint8_t;     begin Result := RG6_bit;   end;
function  _getRST_1 () : uint8_t;     begin Result := RE3_bit;   end;
function  _getCS_1  () : uint8_t;     begin Result := RE4_bit;   end;
function  _getSCK_1 () : uint8_t;     begin Result := RD3_bit;   end;
function  _getMISO_1() : uint8_t;     begin Result := RD12_bit;  end;
function  _getMOSI_1() : uint8_t;     begin Result := RD2_bit;   end;
function  _getPWM_1 () : uint8_t;     begin Result := RF4_bit;   end;
function  _getINT_1 () : uint8_t;     begin Result := RC1_bit;   end;
function  _getRX_1  () : uint8_t;     begin Result := RD9_bit;   end;
function  _getTX_1  () : uint8_t;     begin Result := RD8_bit;   end;
function  _getSCL_1 () : uint8_t;     begin Result := RE6_bit;   end;
function  _getSDA_1 () : uint8_t;     begin Result := RE7_bit;   end;
procedure _setAN_1  (state: uint8_t); begin LATG6_bit := state;  end;
procedure _setRST_1 (state: uint8_t); begin LATE3_bit := state;  end;
procedure _setCS_1  (state: uint8_t); begin LATE4_bit := state;  end;
procedure _setSCK_1 (state: uint8_t); begin LATD3_bit := state;  end;
procedure _setMISO_1(state: uint8_t); begin LATD12_bit := state; end;
procedure _setMOSI_1(state: uint8_t); begin LATD2_bit := state;  end;
procedure _setPWM_1 (state: uint8_t); begin LATF4_bit := state;  end;
procedure _setINT_1 (state: uint8_t); begin LATC1_bit := state;  end;
procedure _setRX_1  (state: uint8_t); begin LATD9_bit := state;  end;
procedure _setTX_1  (state: uint8_t); begin LATD8_bit := state;  end;
procedure _setSCL_1 (state: uint8_t); begin LATE6_bit := state;  end;
procedure _setSDA_1 (state: uint8_t); begin LATE7_bit := state;  end;

function  _getAN_2  () : uint8_t;     begin Result := RB2_bit;   end;
function  _getRST_2 () : uint8_t;     begin Result := RA9_bit;   end;
function  _getCS_2  () : uint8_t;     begin Result := RA10_bit;  end;
function  _getSCK_2 () : uint8_t;     begin Result := RB5_bit;   end;
function  _getMISO_2() : uint8_t;     begin Result := RE9_bit;   end;
function  _getMOSI_2() : uint8_t;     begin Result := RB4_bit;   end;
function  _getPWM_2 () : uint8_t;     begin Result := RF5_bit;   end;
function  _getINT_2 () : uint8_t;     begin Result := RC2_bit;   end;
function  _getRX_2  () : uint8_t;     begin Result := RB15_bit;  end;
function  _getTX_2  () : uint8_t;     begin Result := RB14_bit;  end;
function  _getSCL_2 () : uint8_t;     begin Result := RA2_bit;   end;
function  _getSDA_2 () : uint8_t;     begin Result := RA3_bit;   end;
procedure _setAN_2  (state: uint8_t); begin LATB2_bit := state;  end;
procedure _setRST_2 (state: uint8_t); begin LATA9_bit := state;  end;
procedure _setCS_2  (state: uint8_t); begin LATA10_bit := state; end;
procedure _setSCK_2 (state: uint8_t); begin LATB5_bit := state;  end;
procedure _setMISO_2(state: uint8_t); begin LATE9_bit := state;  end;
procedure _setMOSI_2(state: uint8_t); begin LATB4_bit := state;  end;
procedure _setPWM_2 (state: uint8_t); begin LATF5_bit := state;  end;
procedure _setINT_2 (state: uint8_t); begin LATC2_bit := state;  end;
procedure _setRX_2  (state: uint8_t); begin LATB15_bit := state; end;
procedure _setTX_2  (state: uint8_t); begin LATB14_bit := state; end;
procedure _setSCL_2 (state: uint8_t); begin LATA2_bit  := state; end;
procedure _setSDA_2 (state: uint8_t); begin LATA3_bit  := state; end;

function _gpioInit_1(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;
begin
Result := 0;
    case pin of
        _MIKROBUS_AN_PIN    : begin TRISG6_bit  := direction;         end;      
        _MIKROBUS_RST_PIN   : begin TRISE3_bit  := direction;         end;      
        _MIKROBUS_CS_PIN    : begin TRISE4_bit  := direction;         end;      
        _MIKROBUS_SCK_PIN   : begin TRISD3_bit  := direction;         end;      
        _MIKROBUS_MISO_PIN  : begin TRISD12_bit := direction;         end;      
        _MIKROBUS_MOSI_PIN  : begin TRISD2_bit  := direction;         end;      
        _MIKROBUS_PWM_PIN   : begin TRISF4_bit  := direction;         end;      
        _MIKROBUS_INT_PIN   : begin TRISC1_bit  := direction;         end;
        _MIKROBUS_RX_PIN    : begin TRISD9_bit  := direction;         end;      
        _MIKROBUS_TX_PIN    : begin TRISD8_bit  := direction;         end;      
        _MIKROBUS_SCL_PIN   : begin TRISE6_bit  := direction;         end;      
        _MIKROBUS_SDA_PIN   : begin TRISE7_bit  := direction;         end      
    else
        Result := _MIKROBUS_ERR_PIN;
    end;
end;

function _gpioInit_2(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;
begin
Result := 0;
    case pin of
        _MIKROBUS_AN_PIN    : begin TRISB2_bit  := direction;         end;
        _MIKROBUS_RST_PIN   : begin TRISA9_bit  := direction;         end;
        _MIKROBUS_CS_PIN    : begin TRISA10_bit := direction;         end;
        _MIKROBUS_SCK_PIN   : begin TRISB5_bit  := direction;         end;
        _MIKROBUS_MISO_PIN  : begin TRISE9_bit  := direction;         end;
        _MIKROBUS_MOSI_PIN  : begin TRISB4_bit  := direction;         end;
        _MIKROBUS_PWM_PIN   : begin TRISF5_bit  := direction;         end;
        _MIKROBUS_INT_PIN   : begin TRISC2_bit  := direction;         end;
        _MIKROBUS_RX_PIN    : begin TRISB15_bit := direction;         end;
        _MIKROBUS_TX_PIN    : begin TRISB14_bit := direction;         end;
        _MIKROBUS_SCL_PIN   : begin TRISA2_bit  := direction;         end;
        _MIKROBUS_SDA_PIN   : begin TRISA3_bit  := direction;         end
    else
        Result := _MIKROBUS_ERR_PIN;
    end;
end;

end.