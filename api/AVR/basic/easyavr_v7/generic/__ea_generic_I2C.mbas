module __ea_generic_I2C
include __t_AVR

#IFDEF ENABLE_I2C THEN

sub function _i2cInit_1 (dim cfg as ^const uint32_t) as T_mikrobus_ret
sub function _i2cInit_2 (dim cfg as ^const uint32_t) as T_mikrobus_ret
sub function _i2cInit_3 (dim cfg as ^const uint32_t) as T_mikrobus_ret

#ENDIF

implements

const _MIKROBUS_ERR_I2C          as byte = 4

' ------------------------------------------------------------ SYSTEM SPECIFIC '

#IFDEF ENABLE_I2C THEN

sub function _i2cInit_1 (dim cfg as ^const uint32_t) as T_mikrobus_ret   
dim arg1 as ^const uint32_t
    arg1 = (cfg + 0)
        select case (arg1^)
            case 100000 TWI_Init( 100000 )
            ' case 400000 TWI_Init( 400000 ) '
            case 0 TWI_Start() TWI_Write(0x00) TWI_Read(0x00) TWI_Stop() Result = _MIKROBUS_ERR_I2C
            case else Result = _MIKROBUS_ERR_I2C
        end select
        Result = 0 

end sub

sub function _i2cInit_2 (dim cfg as ^const uint32_t) as T_mikrobus_ret   
dim arg1 as ^const uint32_t
    arg1 = (cfg + 0)
    select case (arg1^)
            case 100000 TWI_Init( 100000 )
            ' case 400000 TWI_Init( 400000 ) '
            case else Result = _MIKROBUS_ERR_I2C
        end select
        Result = 0   
end sub

sub function _i2cInit_3 (dim cfg as ^const uint32_t) as T_mikrobus_ret   
        Result = _MIKROBUS_ERR_I2C
end sub

#ENDIF

end.