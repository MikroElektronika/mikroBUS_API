unit __ea_generic_GPIO;
uses __t_AVR;

function  _getAN_1  () : uint8_t;
function  _getRST_1 () : uint8_t;
function  _getCS_1  () : uint8_t;
function  _getSCK_1 () : uint8_t;
function  _getMISO_1() : uint8_t;
function  _getMOSI_1() : uint8_t;
function  _getPWM_1 () : uint8_t;
function  _getINT_1 () : uint8_t;
function  _getRX_1  () : uint8_t;
function  _getTX_1  () : uint8_t;
function  _getSCL_1 () : uint8_t;
function  _getSDA_1 () : uint8_t;
procedure _setAN_1  (state: uint8_t);
procedure _setRST_1 (state: uint8_t);
procedure _setCS_1  (state: uint8_t);
procedure _setSCK_1 (state: uint8_t);
procedure _setMISO_1(state: uint8_t);
procedure _setMOSI_1(state: uint8_t);
procedure _setPWM_1 (state: uint8_t);
procedure _setINT_1 (state: uint8_t);
procedure _setRX_1  (state: uint8_t);
procedure _setTX_1  (state: uint8_t);
procedure _setSCL_1 (state: uint8_t);
procedure _setSDA_1 (state: uint8_t);

function  _getAN_2  () : uint8_t;    
function  _getRST_2 () : uint8_t;    
function  _getCS_2  () : uint8_t;    
function  _getSCK_2 () : uint8_t;    
function  _getMISO_2() : uint8_t;    
function  _getMOSI_2() : uint8_t;    
function  _getPWM_2 () : uint8_t;    
function  _getINT_2 () : uint8_t;    
function  _getRX_2  () : uint8_t;    
function  _getTX_2  () : uint8_t;    
function  _getSCL_2 () : uint8_t;    
function  _getSDA_2 () : uint8_t;    
procedure _setAN_2  (state: uint8_t);
procedure _setRST_2 (state: uint8_t);
procedure _setCS_2  (state: uint8_t);
procedure _setSCK_2 (state: uint8_t);
procedure _setMISO_2(state: uint8_t);
procedure _setMOSI_2(state: uint8_t);
procedure _setPWM_2 (state: uint8_t);
procedure _setINT_2 (state: uint8_t);
procedure _setRX_2  (state: uint8_t);
procedure _setTX_2  (state: uint8_t);
procedure _setSCL_2 (state: uint8_t);
procedure _setSDA_2 (state: uint8_t);

function  _getAN_3  () : uint8_t;    
function  _getRST_3 () : uint8_t;    
function  _getCS_3  () : uint8_t;    
function  _getSCK_3 () : uint8_t;    
function  _getMISO_3() : uint8_t;    
function  _getMOSI_3() : uint8_t;    
function  _getPWM_3 () : uint8_t;    
function  _getINT_3 () : uint8_t;    
function  _getRX_3  () : uint8_t;    
function  _getTX_3  () : uint8_t;    
function  _getSCL_3 () : uint8_t;    
function  _getSDA_3 () : uint8_t;    
procedure _setAN_3  (state: uint8_t);
procedure _setRST_3 (state: uint8_t);
procedure _setCS_3  (state: uint8_t);
procedure _setSCK_3 (state: uint8_t);
procedure _setMISO_3(state: uint8_t);
procedure _setMOSI_3(state: uint8_t);
procedure _setPWM_3 (state: uint8_t);
procedure _setINT_3 (state: uint8_t);
procedure _setRX_3  (state: uint8_t);
procedure _setTX_3  (state: uint8_t);
procedure _setSCL_3 (state: uint8_t);
procedure _setSDA_3 (state: uint8_t);

function _gpioInit_1(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;
function _gpioInit_2(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;
function _gpioInit_3(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;

implementation

const _MIKROBUS_ERR_PIN  : byte = 1;                

const _GPIO_INPUT        : byte = 0;
const _GPIO_OUTPUT       : byte = 1;

const _MIKROBUS_AN_PIN   : byte = 0;
const _MIKROBUS_RST_PIN  : byte = 1;
const _MIKROBUS_CS_PIN   : byte = 2;
const _MIKROBUS_SCK_PIN  : byte = 3;
const _MIKROBUS_MISO_PIN : byte = 4;
const _MIKROBUS_MOSI_PIN : byte = 5;
const _MIKROBUS_PWM_PIN  : byte = 6;
const _MIKROBUS_INT_PIN  : byte = 7;
const _MIKROBUS_RX_PIN   : byte = 8;
const _MIKROBUS_TX_PIN   : byte = 9;
const _MIKROBUS_SCL_PIN  : byte = 10;
const _MIKROBUS_SDA_PIN  : byte = 11;

// ----------------------------------------------------------- SYSTEM SPECIFIC /

function  _getAN_1  () : uint8_t;     begin Result := PINA7_bit; end;
function  _getRST_1 () : uint8_t;     begin Result := PINA6_bit; end;
function  _getCS_1  () : uint8_t;     begin Result := PINA5_bit; end;
function  _getSCK_1 () : uint8_t;     begin Result := PINB7_bit; end;
function  _getMISO_1() : uint8_t;     begin Result := PINB6_bit; end;
function  _getMOSI_1() : uint8_t;     begin Result := PINB5_bit; end;
function  _getPWM_1 () : uint8_t;     begin Result := PIND4_bit; end;
function  _getINT_1 () : uint8_t;     begin Result := PIND2_bit; end;
function  _getRX_1  () : uint8_t;     begin Result := PIND0_bit; end;
function  _getTX_1  () : uint8_t;     begin Result := PIND1_bit; end;
function  _getSCL_1 () : uint8_t;     begin Result := PINC0_bit; end;
function  _getSDA_1 () : uint8_t;     begin Result := PINC1_bit; end;
procedure _setAN_1  (state: uint8_t); begin PORTA7_bit := state; end;
procedure _setRST_1 (state: uint8_t); begin PORTA6_bit := state; end;
procedure _setCS_1  (state: uint8_t); begin PORTA5_bit := state; end;
procedure _setSCK_1 (state: uint8_t); begin PORTB7_bit := state; end;
procedure _setMISO_1(state: uint8_t); begin PORTB6_bit := state; end;
procedure _setMOSI_1(state: uint8_t); begin PORTB5_bit := state; end;
procedure _setPWM_1 (state: uint8_t); begin PORTD4_bit := state; end;
procedure _setINT_1 (state: uint8_t); begin PORTD2_bit := state; end;
procedure _setRX_1  (state: uint8_t); begin PORTD0_bit := state; end;
procedure _setTX_1  (state: uint8_t); begin PORTD1_bit := state; end;
procedure _setSCL_1 (state: uint8_t); begin PORTC0_bit := state; end;
procedure _setSDA_1 (state: uint8_t); begin PORTC1_bit := state; end;


function  _getAN_2  () : uint8_t;     begin Result := PINA0_bit; end;
function  _getRST_2 () : uint8_t;     begin Result := PINA1_bit; end;
function  _getCS_2  () : uint8_t;     begin Result := PINA3_bit; end;
function  _getSCK_2 () : uint8_t;     begin Result := PINB7_bit; end;
function  _getMISO_2() : uint8_t;     begin Result := PINB6_bit; end;
function  _getMOSI_2() : uint8_t;     begin Result := PINB5_bit; end;
function  _getPWM_2 () : uint8_t;     begin Result := PIND5_bit; end;
function  _getINT_2 () : uint8_t;     begin Result := PIND3_bit; end;
function  _getRX_2  () : uint8_t;     begin Result := PIND0_bit; end;
function  _getTX_2  () : uint8_t;     begin Result := PIND1_bit; end;
function  _getSCL_2 () : uint8_t;     begin Result := PINC0_bit; end;
function  _getSDA_2 () : uint8_t;     begin Result := PINC1_bit; end;
procedure _setAN_2  (state: uint8_t); begin PORTA0_bit := state; end;
procedure _setRST_2 (state: uint8_t); begin PORTA1_bit := state; end;
procedure _setCS_2  (state: uint8_t); begin PORTA3_bit := state; end;
procedure _setSCK_2 (state: uint8_t); begin PORTB7_bit := state; end;
procedure _setMISO_2(state: uint8_t); begin PORTB6_bit := state; end;
procedure _setMOSI_2(state: uint8_t); begin PORTB5_bit := state; end;
procedure _setPWM_2 (state: uint8_t); begin PORTD5_bit := state; end;
procedure _setINT_2 (state: uint8_t); begin PORTD3_bit := state; end;
procedure _setRX_2  (state: uint8_t); begin PORTD0_bit := state; end;
procedure _setTX_2  (state: uint8_t); begin PORTD1_bit := state; end;
procedure _setSCL_2 (state: uint8_t); begin PORTC0_bit := state; end;
procedure _setSDA_2 (state: uint8_t); begin PORTC1_bit := state; end;

function  _getAN_3  () : uint8_t;     begin Result := PINA4_bit; end;
function  _getRST_3 () : uint8_t;     begin Result := PINB0_bit; end;
function  _getCS_3  () : uint8_t;     begin Result := PINB4_bit; end;
function  _getSCK_3 () : uint8_t;     begin Result := PINB7_bit; end;
function  _getMISO_3() : uint8_t;     begin Result := PINB6_bit; end;
function  _getMOSI_3() : uint8_t;     begin Result := PINB5_bit; end;
function  _getPWM_3 () : uint8_t;     begin Result := PINB3_bit; end;
function  _getINT_3 () : uint8_t;     begin Result := PINB2_bit; end;
function  _getRX_3  () : uint8_t;     begin Result := PIND2_bit; end;
function  _getTX_3  () : uint8_t;     begin Result := PIND3_bit; end;
function  _getSCL_3 () : uint8_t;     begin Result := PINC0_bit; end;
function  _getSDA_3 () : uint8_t;     begin Result := PINC1_bit; end;
procedure _setAN_3  (state: uint8_t); begin PORTA4_bit := state; end;
procedure _setRST_3 (state: uint8_t); begin PORTB0_bit := state; end;
procedure _setCS_3  (state: uint8_t); begin PORTB4_bit := state; end;
procedure _setSCK_3 (state: uint8_t); begin PORTB7_bit := state; end;
procedure _setMISO_3(state: uint8_t); begin PORTB6_bit := state; end;
procedure _setMOSI_3(state: uint8_t); begin PORTB5_bit := state; end;
procedure _setPWM_3 (state: uint8_t); begin PORTB3_bit := state; end;
procedure _setINT_3 (state: uint8_t); begin PORTB2_bit := state; end;
procedure _setRX_3  (state: uint8_t); begin PORTD2_bit := state; end;
procedure _setTX_3  (state: uint8_t); begin PORTD3_bit := state; end;
procedure _setSCL_3 (state: uint8_t); begin PORTC0_bit := state; end;
procedure _setSDA_3 (state: uint8_t); begin PORTC1_bit := state; end;

function _gpioInit_1(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;
begin
Result := 0;
    case pin of
        _MIKROBUS_AN_PIN    : DDA7_bit  := direction;
        _MIKROBUS_RST_PIN   : DDA6_bit  := direction;
        _MIKROBUS_CS_PIN    : DDA5_bit  := direction;
        _MIKROBUS_SCK_PIN   : DDB7_bit  := direction;
        _MIKROBUS_MISO_PIN  : DDB6_bit  := direction;
        _MIKROBUS_MOSI_PIN  : DDB5_bit  := direction;
        _MIKROBUS_PWM_PIN   : DDD4_bit  := direction;
        _MIKROBUS_INT_PIN   : DDD2_bit  := direction;
        _MIKROBUS_RX_PIN    : DDD0_bit  := direction;
        _MIKROBUS_TX_PIN    : DDD1_bit  := direction;
        _MIKROBUS_SCL_PIN   : DDC0_bit  := direction;
        _MIKROBUS_SDA_PIN   : DDC1_bit  := direction
    else
        Result := _MIKROBUS_ERR_PIN;
    end;
end;

function _gpioInit_2(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;
begin
Result := 0;
    case pin of
        _MIKROBUS_AN_PIN    : DDA0_bit  := direction;
        _MIKROBUS_RST_PIN   : DDA1_bit  := direction;
        _MIKROBUS_CS_PIN    : DDA3_bit  := direction;
        _MIKROBUS_SCK_PIN   : DDB7_bit  := direction;
        _MIKROBUS_MISO_PIN  : DDB6_bit  := direction;
        _MIKROBUS_MOSI_PIN  : DDB5_bit  := direction;
        _MIKROBUS_PWM_PIN   : DDD5_bit  := direction;
        _MIKROBUS_INT_PIN   : DDD3_bit  := direction;
        _MIKROBUS_RX_PIN    : DDD0_bit  := direction;
        _MIKROBUS_TX_PIN    : DDD1_bit  := direction;
        _MIKROBUS_SCL_PIN   : DDC0_bit  := direction;
        _MIKROBUS_SDA_PIN   : DDC1_bit  := direction
    else
        Result := _MIKROBUS_ERR_PIN;
    end;
end;

function _gpioInit_3(pin: T_mikrobus_pin; direction: T_gpio_dir) : T_mikrobus_ret;
begin
Result := 0;
    case pin of
        _MIKROBUS_AN_PIN    : DDA4_bit  := direction;
        _MIKROBUS_RST_PIN   : DDB0_bit  := direction;
        _MIKROBUS_CS_PIN    : DDB4_bit  := direction;
        _MIKROBUS_SCK_PIN   : DDB7_bit  := direction;
        _MIKROBUS_MISO_PIN  : DDB6_bit  := direction;
        _MIKROBUS_MOSI_PIN  : DDB5_bit  := direction;
        _MIKROBUS_PWM_PIN   : DDB3_bit  := direction;
        _MIKROBUS_INT_PIN   : DDB2_bit  := direction;
        _MIKROBUS_RX_PIN    : DDD2_bit  := direction;
        _MIKROBUS_TX_PIN    : DDD3_bit  := direction;
        _MIKROBUS_SCL_PIN   : DDC0_bit  := direction;
        _MIKROBUS_SDA_PIN   : DDC1_bit  := direction
    else
        Result := _MIKROBUS_ERR_PIN;
    end;
end;

end.