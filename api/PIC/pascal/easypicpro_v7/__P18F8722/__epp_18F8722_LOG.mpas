unit __epp_18F8722_LOG;
uses __t_PIC;

{$IFDEF ENABLE_LOG}
function _log_init1(baud: uint32_t) : T_mikrobus_ret;
function _log_init2(baud: uint32_t) : T_mikrobus_ret;
function _log_init3(baud: uint32_t) : T_mikrobus_ret;
function _log_initUart(baud: uint32_t) : T_mikrobus_ret;
    
procedure _log_write(data_: ^uint8_t);
{$ENDIF}

implementation

const _MIKROBUS_ERR_LOG : byte = 6;

// ----------------------------------------------------------- SYSTEM SPECIFIC /

{$IFDEF ENABLE_LOG}

var logger : ^T_log_writeFp;

function _log_init1(baud: uint32_t) : T_mikrobus_ret;
begin
Result := 0;
    case (baud) of
        4800   : UART1_Init(4800);
        9600   : UART1_Init(9600);
        19200  : UART1_Init(19200);
        38400  : UART1_Init(38400);
        57600  : UART1_Init(57600);
        115200 : UART1_Init(115200)
    else
        UART1_Init(9600);
    end; 
    logger := @UART1_Write;
end;

function _log_init2(baud: uint32_t) : T_mikrobus_ret;
begin
Result := 0;
    case (baud) of
        4800   : UART1_Init(4800);
        9600   : UART1_Init(9600);
        19200  : UART1_Init(19200);
        38400  : UART1_Init(38400);
        57600  : UART1_Init(57600);
        115200 : UART1_Init(115200)
    else
        UART1_Init(9600);
    end; 
    logger := @UART1_Write;
end;

function _log_init3(baud: uint32_t) : T_mikrobus_ret;
begin
Result := 0;
    case (baud) of
        4800   : UART2_Init(4800);
        9600   : UART2_Init(9600);
        19200  : UART2_Init(19200);
        38400  : UART2_Init(38400);
        57600  : UART2_Init(57600);
        115200 : UART2_Init(115200)
    else
        UART2_Init(9600);
    end; 
    logger := @UART2_Write;
end;

function _log_initUart(baud: uint32_t) : T_mikrobus_ret;
begin
Result := 0;
    case (baud) of
        4800   : UART1_Init( 4800);
        9600   : UART1_Init( 9600);
        19200  : UART1_Init( 19200);
        38400  : UART1_Init( 38400);
        57600  : UART1_Init( 57600);
        115200 : UART1_Init( 115200)
    else
        Result := _MIKROBUS_ERR_LOG;
    end;    
    logger := @ UART1_Write;
end;

procedure _log_write(data_: ^uint8_t);
begin
    logger( data_^ );
end;

{$ENDIF}

end.
