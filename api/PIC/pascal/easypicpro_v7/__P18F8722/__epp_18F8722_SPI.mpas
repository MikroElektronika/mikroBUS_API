unit __epp_18F8722_SPI;
uses __t_PIC;

{$IFDEF ENABLE_SPI}
function _spiInit_1(cfg: ^const uint32_t) : T_mikrobus_ret;
function _spiInit_2(cfg: ^const uint32_t) : T_mikrobus_ret;
function _spiInit_3(cfg: ^const uint32_t) : T_mikrobus_ret;
{$ENDIF}

implementation

const _MIKROBUS_ERR_SPI  : byte = 3;

// ----------------------------------------------------------- SYSTEM SPECIFIC /

{$IFDEF ENABLE_SPI}

function _spiInit_1(cfg: ^const uint32_t) : T_mikrobus_ret;
var arg1, arg2, arg3, arg4 : ^const uint32_t;
begin
    arg1 := (cfg + 0);
    arg2 := (cfg + 1);
    arg3 := (cfg + 2);
    arg4 := (cfg + 3);
    SPI1_Init_Advanced(byte(arg1^), byte(arg2^), byte(arg3^), byte(arg4^));
    Result := 0;
end;

function _spiInit_2(cfg: ^const uint32_t) : T_mikrobus_ret;
var arg1, arg2, arg3, arg4 : ^const uint32_t;
begin
    arg1 := (cfg + 0);
    arg2 := (cfg + 1);
    arg3 := (cfg + 2);
    arg4 := (cfg + 3);
    SPI1_Init_Advanced(byte(arg1^), byte(arg2^), byte(arg3^), byte(arg4^));
    Result := 0;
end;

function _spiInit_3(cfg: ^const uint32_t) : T_mikrobus_ret;
var arg1, arg2, arg3, arg4 : ^const uint32_t;
begin
    arg1 := (cfg + 0);
    arg2 := (cfg + 1);
    arg3 := (cfg + 2);
    arg4 := (cfg + 3);
    SPI1_Init_Advanced(byte(arg1^), byte(arg2^), byte(arg3^), byte(arg4^));
    Result := 0;
end;

{$ENDIF}

end.